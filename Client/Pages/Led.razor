@page "/led"
@using System.Net.Http;
@using System.Net.Http.Json;
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Led Toggle</h1>

<p>Current On: @toggle</p>
<button class="btn btn-primary" @onclick="ToggleLed">Toggle</button>
<p>
    Climate Data: @climateData
</p>
@code {
    bool toggle = false;
    [Inject] private HubConnectionBuilder _hubConnectionBuilder { get; set; }
    private Func<bool, Task> handleSwitchStatus;
    private Func<string, Task> handleDhtStatus;
    private string climateData = "no data!";

    protected override async Task OnInitializedAsync()
    {
        handleSwitchStatus += ReceiveSwitchStatus;
        handleDhtStatus += ReceiveDhtStatus;
        var gpioConnection = new HubConnectionBuilder()
                    .WithUrl(NavigationManager.ToAbsoluteUri("/gpio"))
                    .WithAutomaticReconnect()
                    .Build();
            gpioConnection.On("ReceiveSwitchStatus", this.handleSwitchStatus);
            gpioConnection.On("ReceiveDhtStatus", this.handleDhtStatus);
            await gpioConnection.StartAsync();
    }

    Task ReceiveSwitchStatus(bool arg)
    {
        toggle = arg;
        StateHasChanged();
        return Task.CompletedTask;
    }

    Task ReceiveDhtStatus(string arg)
    {
        climateData = arg;
        StateHasChanged();
        return Task.CompletedTask;
    }

    async Task ToggleLed()
    {
        toggle = !toggle;
        await Http.PostAsJsonAsync("LED", toggle);
    }
}